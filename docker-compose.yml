version: "3.8"

services:
  db:
    image: mariadb:latest
    container_name: librenms_db
    command:
      - "mysqld"
      - "--innodb-file-per-table=1"
      - "--max-allowed-packet=41943040"
      - "--innodb-buffer-pool-size=1G"
      - "--innodb_io_capacity=4000"
      - "--lower-case-table-names=0"
      - "--character-set-server=utf8"
      - "--collation-server=utf8_unicode_ci"
    volumes:
      - "db:/var/lib/mysql"
    networks:
      - "agent_network"
    environment:
      - "TZ=${TZ}"
      - "MYSQL_ALLOW_EMPTY_PASSWORD=yes"
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
    restart: unless-stopped

  memcached:
    image: memcached:alpine
    container_name: librenms_memcached
    networks:
      - "agent_network"
    environment:
      - "TZ=${TZ}"
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: librenms_redis
    volumes:
      - "redisdata:/data"
    networks:
      - "agent_network"
    environment:
      - "TZ=${TZ}"
    restart: unless-stopped

  rrdcached:
    image: crazymax/rrdcached
    container_name: librenms_rrdcached
    volumes:
      - "rrddata:/data/db"
      - "rrdjournal:/data/journal"
    networks:
      - "agent_network"
    environment:
      - "TZ=${TZ}"
      - "LOG_LEVEL=LOG_INFO"
      - "WRITE_TIMEOUT=1800"
      - "WRITE_JITTER=1800"
      - "WRITE_THREADS=4"
      - "FLUSH_DEAD_DATA_INTERVAL=3600"
    restart: unless-stopped

  msmtpd:
    image: crazymax/msmtpd:latest
    container_name: librenms_msmtpd
    networks:
      - "agent_network"
    env_file:
      - "./msmtpd.env"
    restart: unless-stopped

  librenms:
    image: librenms/librenms:latest
    container_name: librenms
    domainname: domain.local
    hostname: librenms
    ports:
      - target: 8000
        published: 8081
        protocol: tcp
    depends_on:
      - db
      - memcached
      - rrdcached
      - msmtpd
    volumes:
      - "data:/data"
      - "./config/librenms/config.custom.php:/data/config/config.custom.php"
    networks:
      - "proxy_network"
      - "agent_network"
    env_file:
      - "./librenms.env"
    environment:
      - "TZ=${TZ}"
      - "DB_HOST=db"
      - "DB_NAME=${MYSQL_DATABASE}"
      - "DB_USER=${MYSQL_USER}"
      - "DB_PASSWORD=${MYSQL_PASSWORD}"
      - "DB_TIMEOUT=60"
    restart: unless-stopped

  dispatcher:
    image: librenms/librenms:latest
    container_name: librenms_dispatcher
    domainname: domain.local
    hostname: librenms
    depends_on:
      - librenms
      - redis
    deploy:
      resources:
        limits:
          cpus: '2.00'
    volumes:
      - "data:/data"
    networks:
      - "agent_network"
    env_file:
      - "./librenms.env"
    environment:
      - "TZ=${TZ}"
      - "DB_HOST=db"
      - "DB_NAME=${MYSQL_DATABASE}"
      - "DB_USER=${MYSQL_USER}"
      - "DB_PASSWORD=${MYSQL_PASSWORD}"
      - "DB_TIMEOUT=60"
      - "DISPATCHER_NODE_ID=dispatcher1"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "REDIS_DB=0"
      - "SIDECAR_DISPATCHER=1"
    restart: unless-stopped

  syslog-ng:
    image: librenms/librenms:latest
    container_name: librenms_syslog
    domainname: domain.local
    hostname: librenms
    depends_on:
      - librenms
#    ports:
#      - target: 514
#        published: 514
#        protocol: tcp
#      - target: 514
#        published: 514
#        protocol: udp
    volumes:
      - "data:/data"
    networks:
      - "agent_network"
    env_file:
      - "./librenms.env"
    environment:
      - "TZ=${TZ}"
      - "DB_HOST=db"
      - "DB_NAME=${MYSQL_DATABASE}"
      - "DB_USER=${MYSQL_USER}"
      - "DB_PASSWORD=${MYSQL_PASSWORD}"
      - "DB_TIMEOUT=60"
      - "SIDECAR_SYSLOGNG=1"
    restart: unless-stopped

  oxidized:
    container_name: librenms_oxidized
    environment:
      - "CONFIG_RELOAD_INTERVAL=600"
      - "TZ=${TZ}"
    image: oxidized/oxidized:latest
    restart: unless-stopped
    volumes:
      - "oxidized:/root/.config/oxidized"
      - "./config/oxidized/config:/root/.config/oxidized/config"
    networks:
      - "agent_network"

volumes:
  data:
  db:
  oxidized:
  redisdata:
  rrddata:
  rrdjournal:

networks:
  agent_network:
    attachable: true
    driver: bridge
#  proxy_network:
#    external: true
